{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = '';\nconst currentDate = new Date();\n\nlet button = document.querySelector('[data-start]');\nlet dataDays = document.querySelector('[data-days]');\nlet dataHours = document.querySelector('[data-hours]');\nlet dataMinutes = document.querySelector('[data-minutes]');\nlet dataSeconds = document.querySelector('[data-seconds]');\n// let time = document.querySelector('.time');\n\nbutton.setAttribute('disabled', '');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= currentDate) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        title: 'Warning',\n        color: 'red',\n      });\n      button.setAttribute('disabled', '');\n    } else {\n      button.removeAttribute('disabled');\n    }\n    userSelectedDate = selectedDate;\n  },\n};\n\nconst fp = flatpickr('#datetime-picker', options);\n\nbutton.addEventListener('click', () => {\n  button.setAttribute('disabled', '');\n  fp.input.setAttribute('disabled', '');\n  const interval = setInterval(() => {\n    const { days, hours, minutes, seconds } = convertMs(\n      userSelectedDate - new Date()\n    );\n\n    dataDays.textContent = addLeadingZero(days);\n    dataHours.textContent = addLeadingZero(hours);\n    dataMinutes.textContent = addLeadingZero(minutes);\n    dataSeconds.textContent = addLeadingZero(seconds);\n\n    if (!days && !hours && !minutes && !seconds) {\n      clearInterval(interval);\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n\n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(dateStr) {\n  return dateStr.toString().padStart(2, '0');\n}\n"],"names":["userSelectedDate","currentDate","button","dataDays","dataHours","dataMinutes","dataSeconds","options","selectedDates","selectedDate","iziToast","fp","flatpickr","interval","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","dateStr"],"mappings":"2GAKA,IAAIA,EAAmB,GACvB,MAAMC,EAAc,IAAI,KAExB,IAAIC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAGzDJ,EAAO,aAAa,WAAY,EAAE,EAClC,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgBR,GAClBS,EAAS,KAAK,CACZ,QAAS,qCACT,SAAU,WACV,MAAO,UACP,MAAO,KACf,CAAO,EACDR,EAAO,aAAa,WAAY,EAAE,GAElCA,EAAO,gBAAgB,UAAU,EAEnCF,EAAmBS,CACpB,CACH,EAEME,EAAKC,EAAU,mBAAoBL,CAAO,EAEhDL,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,aAAa,WAAY,EAAE,EAClCS,EAAG,MAAM,aAAa,WAAY,EAAE,EACpC,MAAME,EAAW,YAAY,IAAM,CACjC,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EACxClB,EAAmB,IAAI,IAC7B,EAEIG,EAAS,YAAcgB,EAAeL,CAAI,EAC1CV,EAAU,YAAce,EAAeJ,CAAK,EAC5CV,EAAY,YAAcc,EAAeH,CAAO,EAChDV,EAAY,YAAca,EAAeF,CAAO,EAE5C,CAACH,GAAQ,CAACC,GAAS,CAACC,GAAW,CAACC,GAClC,cAAcJ,CAAQ,CAEzB,EAAE,GAAI,CACT,CAAC,EAED,SAASK,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAS,CAC/B,OAAOA,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,CAC3C"}